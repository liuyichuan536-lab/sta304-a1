```{r}
# part(4)
#| label: setup
#| include: false
set.seed(304)
library(dplyr)
library(tidyr)
library(stringr)
library(scales)
library(ggplot2)
library(forcats)
library(janitor)
library(gt)
```


```{r}
#part 3
n <- 320

grade <- sample(c("G9","G10","G11","G12"), n, replace=TRUE, prob=c(0.28,0.26,0.24,0.22))
region <- sample(c("GTA","Rest of Ontario","Outside Ontario"), n, replace=TRUE, prob=c(0.64,0.33,0.03))
pathway <- sample(c("Mainstream","AP","IB","Undecided"), n, replace=TRUE, prob=c(0.58,0.23,0.14,0.05))

# Prior exposure & familiarity
read_section <- rbinom(n, 1, ifelse(grade %in% c("G11","G12"), 0.65, 0.45))
familiarity <- pmin(pmax(round(rnorm(n, mean = ifelse(pathway %in% c("AP","IB"), 3.6, 3.0), sd=1)),1),5)

# Likert helper
likert_draw <- function(mu, sd=1.0){
  p <- 1:5
  sapply(mu, function(m){
    w <- dnorm(p, mean=m, sd=sd)
    w <- w / sum(w)   
    sample(p, 1, prob=w)
  })
}
# Construct means: AP/IB students tend to rate “comparison clarity” higher,
# Mainstream students may value balance; seniors emphasise rigor/credits
mu_help   <- 3.4 + 0.4*(pathway %in% c("AP","IB")) + 0.2*(grade %in% c("G11","G12"))
mu_rigor  <- 3.3 + 0.3*(grade %in% c("G11","G12"))
mu_decide <- 3.2 + 0.5*(read_section==1)
mu_credit <- 3.1 + 0.5*(pathway %in% c("AP","IB"))
mu_fair   <- 3.3 # target balance
```


```{r}
# Generate Likert-scale responses for survey questions Q6 to Q10 using the helper function
q6_helpfulness   <- likert_draw(mu_help)
q7_rigor_clarity <- likert_draw(mu_rigor)
q8_decision      <- likert_draw(mu_decide)
q9_credit_info   <- likert_draw(mu_credit)
q10_fair_balance <- likert_draw(mu_fair)

# Simulate responses for Q11 (open-ended need) with weighted probabilities
q11_need <- sample(
  c("Checklist side-by-side","Stress/Time templates","AP/IB recognition (ON universities)",
    "Student case studies","Switching paths in Gr 11/12"),
  n, replace=TRUE, prob=c(0.24,0.18,0.26,0.20,0.12)
)

# Generate overall star rating based on a normal distribution derived from Q6 and Q8
stars_overall <- pmin(pmax(round(rnorm(n, mean = (q6_helpfulness+q8_decision)/2*0.8, sd=0.8)),1),5)

# Combine all simulated data into a tibble
dat_raw <- tibble(
  id = 1:n, grade, region, pathway,
  read_section = factor(read_section, levels=c(0,1), labels=c("No/Unsure","Yes")),
  familiarity = as.integer(familiarity),
  q6_helpfulness = as.integer(q6_helpfulness),
  q7_rigor_clarity = as.integer(q7_rigor_clarity),
  q8_decision = as.integer(q8_decision),
  q9_credit_info = as.integer(q9_credit_info),
  q10_fair_balance = as.integer(q10_fair_balance),
  q11_need,
  stars_overall = as.integer(stars_overall)
)
```


```{r}
# part(5)
#  Clean and preprocess data:
# - Clean column names (janitor::clean_names)
# - Convert 'grade' and 'pathway' to factors with specific levels
# - Create a binary variable 'helpful_bin' indicating if Q6 response >= 4
dat <- dat_raw %>%
  clean_names() %>%
  mutate(
    grade = factor(grade, levels=c("G9","G10","G11","G12")),
    pathway = fct_relevel(factor(pathway), "Mainstream","AP","IB","Undecided"),
    helpful_bin = q6_helpfulness >= 4  # primary analysis: ≥4 = “helpful”
  )
```

```{r}
# Grade distribution map
grade_plot <- dat %>%
  count(grade) %>%
  mutate(percent = n / sum(n)) %>%
  ggplot(aes(x = grade, y = percent, fill = grade)) +
  geom_col(show.legend = FALSE) +
  geom_text(aes(label = scales::percent(percent, accuracy = 0.1)), 
            vjust = -0.5, size = 3.5) +
  scale_y_continuous(labels = scales::percent_format(), 
                     limits = c(0, 0.35)) +
  labs(title = "Grade Distribution of Survey Respondents",
       x = "Grade", 
       y = "Percentage") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))

grade_plot
```


```{r}
# Create summary table of helpfulness by pathway:
# - n: count per pathway
# - mean_helpfulness: average Q6 score
# - pct_helpful: proportion with helpful_bin == TRUE
tab <- dat %>%
  group_by(pathway) %>%
  summarise(
    n = n(),
    mean_helpfulness = mean(q6_helpfulness),
    pct_helpful = mean(helpful_bin)
  ) %>%
  ungroup() %>%
  mutate(
    mean_helpfulness = round(mean_helpfulness, 2),
    pct_helpful = percent(pct_helpful, accuracy=0.1)
  )

# Format the summary table using gt
gt(tab) |>
  tab_header(title = "Helpfulness of AP/IB/Mainstream Comparison (by Pathway)") |>
  cols_label(
    pathway = "Pathway", n = "N",
    mean_helpfulness = "Mean (1–5)",
    pct_helpful = "Proportion ≥4"
  )
```

```{r}
# Reshape data to plot distributions of multiple questions
likert_long <- dat %>%
  select(id, pathway, q6_helpfulness:q10_fair_balance) %>%
  pivot_longer(cols = q6_helpfulness:q10_fair_balance,
               names_to = "question",
               values_to = "rating") %>%
  mutate(question = factor(question,
                           labels = c("Q6: Helpfulness", "Q7: Rigor Clarity",
                                      "Q8: Decision Support", "Q9: Credit Info",
                                      "Q10: Fair Balance")))

# Create violin-boxplot combination chart
likert_plot <- ggplot(likert_long, aes(x = question, y = rating, fill = question)) +
  geom_violin(alpha = 0.6, show.legend = FALSE) +
  geom_boxplot(width = 0.2, alpha = 0.8, show.legend = FALSE) +
  stat_summary(fun = mean, geom = "point", shape = 18, size = 3, color = "red") +
  labs(title = "Score Distribution Across Evaluation Dimensions",
       x = "Evaluation Questions",
       y = "Rating (1-5)") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 15, hjust = 1),
        plot.title = element_text(hjust = 0.5))

likert_plot
```

```{r}
# Needs Analysis Chart
need_plot <- dat %>%
  count(q11_need) %>%
  mutate(percent = n / sum(n),
         q11_need = fct_reorder(q11_need, percent)) %>%
  ggplot(aes(x = q11_need, y = percent, fill = q11_need)) +
  geom_col(show.legend = FALSE) +
  geom_text(aes(label = scales::percent(percent, accuracy = 0.1)),
            hjust = -0.1, size = 3.5) +
  scale_y_continuous(labels = scales::percent_format(),
                     limits = c(0, 0.35)) +
  coord_flip() + # Flip coordinates for better readability of long text
  labs(title = "Most Requested Handbook Additions",
       x = "Request Type",
       y = "Percentage") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))

need_plot
```


```{r}
# --- Plot: Proportion “Helpful (≥4)” by pathway ---
plot_dat <- dat %>%
  group_by(pathway) %>%
  summarise(p = mean(helpful_bin)) %>%
  mutate(pathway = fct_reorder(pathway, p))

# Create a bar plot of proportion helpful by pathway
ggplot(plot_dat, aes(x=pathway, y=p)) +
  geom_col() +
  geom_text(aes(label = percent(p, accuracy=0.1)), vjust = -0.3) +
  scale_y_continuous(labels = percent_format(), limits = c(0,1)) +
  labs(title="Share Rating the Comparison as Helpful (≥4)", x=NULL, y="Proportion") +
  theme_minimal(base_size = 12)
```


```{r}
# --- 95% CI for overall helpfulness (Wilson) ---
prop_ci_wilson <- function(x, n, conf=0.95){
  z <- qnorm(1 - (1 - conf)/2)
  p <- x/n
  denom <- 1 + z^2/n
  center <- (p + z^2/(2*n))/denom
  half <- (z * sqrt((p*(1-p) + z^2/(4*n))/n))/denom
  c(lower = center - half, upper = center + half, p = p, n = n)
}

# Calculate Wilson CI for the overall proportion of helpful responses
ci <- with(dat, prop_ci_wilson(sum(helpful_bin), nrow(dat), 0.95))

# Create a table displaying the Wilson CI results
gt(
  tibble(
    Metric = "Proportion rating comparison as Helpful (≥4)",
    N = as.integer(ci["n"]),
    Estimate = percent(ci["p"], accuracy=0.1),
    CI95_Lower = percent(ci["lower"], accuracy=0.1),
    CI95_Upper = percent(ci["upper"], accuracy=0.1)
  )
) |>
  tab_header(title = "95% CI for Overall Helpfulness (Wilson)")

# --- Appendix glimpse (first 10 rows) ---
head(dat, 10)
```

```{r}
# Calculate correlation matrix
cor_matrix <- dat %>%
  select(q6_helpfulness:q10_fair_balance) %>%
  cor(use = "complete.obs")

# Create correlation heatmap
cor_plot <- cor_matrix %>%
  as.data.frame() %>%
  tibble::rownames_to_column("var1") %>%  
  pivot_longer(cols = -var1, names_to = "var2", values_to = "correlation") %>%
  mutate(
    var1 = factor(var1, labels = c("Helpfulness", "Rigor Clarity", 
                                   "Decision Support", "Credit Info", "Fair Balance")),
    var2 = factor(var2, labels = c("Helpfulness", "Rigor Clarity", 
                                   "Decision Support", "Credit Info", "Fair Balance"))
  ) %>%
  ggplot(aes(x = var1, y = var2, fill = correlation)) +
  geom_tile(color = "white") +  
  geom_text(aes(label = round(correlation, 2)), color = "black", size = 4) +  
  scale_fill_gradient2(low = "blue", high = "red", mid = "white",
                       midpoint = 0, limit = c(-1, 1), space = "Lab",
                       name = "Correlation Coefficient") +
  labs(title = "Correlation Between Evaluation Dimensions",
       x = "", y = "") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        plot.title = element_text(hjust = 0.5))

cor_plot
```

```{r}
# Dual grouping analysis by grade and pathway
grade_path_plot <- dat %>%
  group_by(grade, pathway) %>%
  summarise(mean_help = mean(q6_helpfulness, na.rm = TRUE),
            n = n()) %>%
  filter(n > 5) %>% # Only show groups with sufficient sample size
  ggplot(aes(x = grade, y = mean_help, fill = pathway)) +
  geom_col(position = position_dodge(0.8), width = 0.7) +
  geom_text(aes(label = round(mean_help, 1)),
            position = position_dodge(0.8), vjust = -0.5, size = 3) + 
  labs(title = "Average Helpfulness Rating by Grade and Pathway",
       x = "Grade",
       y = "Average Rating (1-5)",
       fill = "Course Pathway") +
  ylim(0, 5) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))

grade_path_plot
```
