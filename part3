```{r}
# part (3)
n <- 320

# Demographic variables
grade <- sample(c("G9","G10","G11","G12"), n, replace=TRUE, prob=c(0.28,0.26,0.24,0.22))
region <- sample(c("GTA","Rest of Ontario","Outside Ontario"), n, replace=TRUE, prob=c(0.64,0.33,0.03))
pathway <- sample(c("Mainstream","AP","IB","Undecided"), n, replace=TRUE, prob=c(0.58,0.23,0.14,0.05))

# Prior exposure & familiarity
read_section <- rbinom(n, 1, ifelse(grade %in% c("G11","G12"), 0.65, 0.45))
familiarity <- pmin(pmax(round(rnorm(n, mean = ifelse(pathway %in% c("AP","IB"), 3.6, 3.0), sd=1)),1),5)

# Likert helper
likert_draw <- function(mu, sd=1.0){
  p <- 1:5
  sapply(mu, function(m){
    w <- dnorm(p, mean=m, sd=sd)
    w <- w / sum(w)   
    sample(p, 1, prob=w)
  })

}

# Construct means: AP/IB students tend to rate “comparison clarity” higher,
# Mainstream students may value balance; seniors emphasise rigor/credits
mu_help   <- 3.4 + 0.4*(pathway %in% c("AP","IB")) + 0.2*(grade %in% c("G11","G12"))
mu_rigor  <- 3.3 + 0.3*(grade %in% c("G11","G12"))
mu_decide <- 3.2 + 0.5*(read_section==1)
mu_credit <- 3.1 + 0.5*(pathway %in% c("AP","IB"))
mu_fair   <- 3.3 # target balance

```

```{r}
# Generate Likert-scale responses for survey questions Q6 to Q10 using the helper function
q6_helpfulness   <- likert_draw(mu_help)
q7_rigor_clarity <- likert_draw(mu_rigor)
q8_decision      <- likert_draw(mu_decide)
q9_credit_info   <- likert_draw(mu_credit)
q10_fair_balance <- likert_draw(mu_fair)

# Simulate responses for Q11 (open-ended need) with weighted probabilities
q11_need <- sample(
  c("Checklist side-by-side","Stress/Time templates","AP/IB recognition (ON universities)",
    "Student case studies","Switching paths in Gr 11/12"),
  n, replace=TRUE, prob=c(0.24,0.18,0.26,0.20,0.12)
)

# Generate overall star rating based on a normal distribution derived from Q6 and Q8
stars_overall <- pmin(pmax(round(rnorm(n, mean = (q6_helpfulness+q8_decision)/2*0.8, sd=0.8)),1),5)

# Combine all simulated data into a tibble
dat_raw <- tibble(
  id = 1:n, grade, region, pathway,
  read_section = factor(read_section, levels=c(0,1), labels=c("No/Unsure","Yes")),
  familiarity = as.integer(familiarity),
  q6_helpfulness = as.integer(q6_helpfulness),
  q7_rigor_clarity = as.integer(q7_rigor_clarity),
  q8_decision = as.integer(q8_decision),
  q9_credit_info = as.integer(q9_credit_info),
  q10_fair_balance = as.integer(q10_fair_balance),
  q11_need,
  stars_overall = as.integer(stars_overall)
)
```
